# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# trigger:
# - master

variables:
- name: npm_cache_directory           
  value: $(Pipeline.Workspace)/.npm   # (Build.SourcesDirectory)=(Pipeline.Workspace)
- name: NPM_CACHE_RESTORED           
  value: 'false'


pool:
  vmImage: ubuntu-latest

stages:
  - stage: BuildArtifact
    jobs:
      - job: BuildArtifact
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "18.x"
              checkLatest: true
          
          - script: echo 'NODE_MODULES_CACHE_RESTORE = false'
            displayName: 'NODE_MODULES_CACHE_RESTORE value'
            condition: ne(variables.NODE_MODULES_CACHE_RESTORE, 'true') 

          - task: Cache@2
            displayName: Cache npm
            inputs:
              key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/package-lock.json'
              path: $(npm_cache_directory)
              restoreKeys: |
                npm | "$(Agent.OS)"
              cacheHitVar: NPM_CACHE_RESTORED

          - script: echo 'NODE_MODULES_CACHE_RESTORE = true'
            displayName: 'NODE_MODULES_CACHE_RESTORE value'
            condition: eq(variables.NODE_MODULES_CACHE_RESTORE, 'true')      

          - script: npm install
            workingDirectory: '$(Build.SourcesDirectory)/'
            displayName: "Install npm packages"
            condition: ne(variables.NPM_CACHE_RESTORED, 'true')

          - bash: npm run build
            displayName: Build optimize application


          # - bash: git checkout $(Build.SourceBranchName)
          #   displayName: 'git checkout' 

          # - bash: git remote add heroku https://heroku:$(heroku_token)@git.heroku.com/powerful-brook-60339.git
          #   displayName: 'git remote add heroku'

          # - bash: git push -f https://heroku:$(heroku_token)@git.heroku.com/powerful-brook-60339.git HEAD
          # # git push heroku -f
          # # $(Build.SourceBranchName)
          #   displayName: 'git push heroku' 